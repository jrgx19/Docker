services:
  traefik:
    container_name: traefik
    image: traefik:${TRAEFIK_DOCKER_TAG-latest}
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
      - ../.env
    # depends_on:
    #   - socket-proxy
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --api=true
      - --api.insecure=false
      - --api.dashboard=true
      - --ping=true
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=$LOCAL_IPS #CF_IPs # uncomment to allow Cloudflare 
      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      - --providers.docker=true
      - --providers.docker.endpoint=${PROXY_SOCKET}
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=proxy 
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.options=tls-opts@file
      - --entrypoints.websecure.http.tls.certresolver=dns-cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAINNAME}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAINNAME}
      - --providers.file.directory=/rules
      - --providers.file.watch=true
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment while testing
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.propagation.delayBeforeChecks=90
    volumes:
      - ./config/rules:/rules
      - ./config/acme/acme.json:/acme.json # cretae an empty file and set permissions to 600
      - $LOGSDIR/traefik:/logs
    networks:
      proxy:
        ipv4_address: 10.10.10.254
      socket_proxy:
    ports:
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    secrets:
      - cf_dns_api_token
    healthcheck:
     test: ["CMD", "traefik", "healthcheck", "--ping"]
     interval: 5s
     retries: 3
    restart: unless-stopped
    labels:
      - autoheal=true
      - traefik.enable=true
      - traefik.http.routers.traefik-rtr.entrypoints=websecure
      - traefik.http.routers.traefik-rtr.rule=Host(`proxy.$DOMAINNAME`) || Host(`traefik.$DOMAINNAME`)
      - traefik.http.routers.traefik-rtr.service=api@internal
      - traefik.http.routers.ping.tls=true
      - traefik.http.routers.ping.service=ping@internal
      - traefik.http.routers.traefik-rtr.middlewares=chain-no-auth@file

networks:
  proxy:
    name: proxy
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.10.0/24
          gateway: 10.10.10.1
  socket_proxy:
    external: true

secrets:
  cf_dns_api_token:
    file: ./cf_dns_api_token